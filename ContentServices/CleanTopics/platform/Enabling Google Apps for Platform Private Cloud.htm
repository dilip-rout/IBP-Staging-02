<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>To enable the use of Google Apps in Platform Private Cloud, you must set up Google OAuth 2.0 for your Platform Private Cloud instance. The procedure includes acquiring a Google Client ID and a Google Client Secret Key from a Google project and then updating the GoogleClientId, GoogleClientSecretKey, GoogleApplicationName and GoogleScopes properties in the Google Integration section within the Configuration pane under the Control Panel tab of your Platform Private Cloud. To enable the use of Google Apps in Platform Private Cloud, do the following: Note: Only the users with access to Control Panel for Platform Private Cloud instance can enable the use of Google Apps. Create a new Project in Google Developers Console for Platform. For information on creating a project, see https://cloud.google.com/resource-manager/docs/creating-managing-projects . Activate Calendar API, Drive API, Google People API, and Gmail API in your Project. These APIs must be included in your project if you want to use Gmail and sync Google Calendar in Platform. For information on activating APIs, see https://cloud.google.com/apis/docs/enable-disable-apis . Set up OAuth 2.0 and create a new Client ID for Platform Private Cloud. For information on setting up OAuth 2.0, see https://support.google.com/cloud/answer/6158849?hl=en . In the Create Client ID dialog, you must provide the following values: Select Web application as your APPLICATION TYPE. If prompted with the Consent Screen, provide the appropriate account details in the consent screen and click Save. The Create Client ID page reappears. In the AUTHORIZED JAVASCRIPT ORIGINS field, specify the javascript origin of the Platform Private Cloud URL, http://&lt;computer-name&gt;:&lt;port-number&gt;/. For example, if your Platform Private Cloud URL is http://localhost:8830/router/login/loginPrivate.jsp, then you must specify and authorize http://localhost:8830/ as your javascript origin. In the AUTHORIZED REDIRECT URIS field, specify all the Platform server URLs in the format: http://&lt;computer-name&gt;:&lt;port-number&gt;/&lt;server-name&gt;/router/servlet/oauth2callback. For example, if your Platform Private Cloud URL is http://localhost:8830/router/login/loginPrivate.jsp, then you must specify and authorize http://localhost:8830/router/servlet/oauth2callback your redirect URI. Click Create Client ID. Client ID for the Web application appears. Copy the CLIENT ID and CLIENT SECRET values. Log into Platform Private Cloud as Master Admin. Paste the CLIENT ID and CLIENT SECRET values in the GoogleClientId, GoogleClientSecretKey and GoogleApplicationName properties in your Platform Private Cloud's Google Integration section within the Configuration pane under the Control Panel tab. Navigate to System Console &gt; System &gt; Control Panel &gt; Configuration &gt; Google Integration and configure your Google Apps account for Platform. For more information about Google Apps Settings, see Control Panel . Note: After the Platform Private Cloud's Shared Properties is updated with the aforementioned properties, all the users in the Platform tenant will be able to configure their Google accounts and use Google Apps in Platform.</body>
</html>