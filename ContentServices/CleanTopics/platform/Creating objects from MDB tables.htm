<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head />
    <body>Platform reads the structure of the uploaded MDB database. Each table in the MDB database can be converted into a new Platform object and every row in that table can be converted into a Platform record. The wizard-style UI will assist you with these tasks. To create Platform objects from MDB tables: Enter the name for the new application. By default, Platform uses the name of the uploaded database. Select which tables should be converted into Platform objects. Select singular and plural names for these objects (the table's name is used by default). Platform displays the number of records in the uploaded database for each table for informational purposes. Platform reads the metadata for the database and creates a primary key for each object. Platform also reads each table description in the database and saves it as the object description. Optionally select Platform attributes for the newly created objects. Infinite Blue recommends using the Contact attribute for tables that represent people, the Location attribute for tables that represent things with a physical/geographical address, and the Workflow attribute for objects which will be involved in workflow processes. See Object attributes for more information about attributes. From the Name Column column, select any column with a string data type to use for the Record Name field. Platform includes the Record Name field in the default view it creates for the object; users click the Record Name field to navigate to the object's View page. If an object does not have a Record Name field, imported records will not have a distinguishable name. For tables that represent people, and for which you will add the Contact attribute, leave this value at its default. Platform will automatically create a Record Name field that includes the First Name and Last Name values. Select the objects for which you want to create associated tabs. Typically, every standalone object (except for dependent ones) should have an associated tab. For example, the resulting configuration for the Northwind database is shown below. Note that the dependent object Order Details has a composite primary key and does not have an associated tab. Some objects have attributes assigned to them; for example, the Employee object has the Contact and Location attributes, the Customer object has the Location attribute, and the Order object has the Workflow attribute. See Object attributes for more information about available attributes. Click Create Objects to create eight Platform objects and seven tabs in an application called Northwind. The next step is to map fields from the database to Platform objects.</body>
</html>